-- teamtalk 스키마에 역할 타입 정의
CREATE TYPE teamtalk.role_type AS ENUM ('디자이너', '개발자', '기획자');

-- teamtalk 스키마에 시나리오 타입 정의  
CREATE TYPE teamtalk.scenario_type AS ENUM ('시나리오1', '시나리오2', '시나리오3');

-- 유저 정보
CREATE TABLE teamtalk.users (
    id SERIAL PRIMARY KEY,
    user_email VARCHAR(255) UNIQUE NOT NULL,
    user_password VARCHAR(255) NOT NULL,
    user_name VARCHAR(50) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    last_login TIMESTAMP NOT NULL DEFAULT NOW()
);

-- 설문 결과 기준으로 채팅방 생성
CREATE TABLE teamtalk.sessions (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES teamtalk.users(id) ON DELETE CASCADE,
    user_role role_type NOT NULL,
    worker1_role role_type NOT NULL,
    worker2_role role_type NOT NULL,
    scenario_type scenario_type NOT NULL,
    session_description TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW(), 
    
    -- 제약조건: 모든 역할이 달라야 함
    CONSTRAINT different_roles CHECK (
        user_role != worker1_role AND 
        user_role != worker2_role AND 
        worker1_role != worker2_role
    )
);

-- 생성된 채팅방의 대화 내용
CREATE TABLE teamtalk.conversations (
    id SERIAL PRIMARY KEY,
    session_id INTEGER NOT NULL REFERENCES teamtalk.sessions(id) ON DELETE CASCADE,
    sender_role role_type NOT NULL,
    is_user BOOLEAN NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- 시나리오 정보는 SQL 혹은 JSON으로 정리해야함.

-- 성능 최적화를 위한 인덱스
CREATE INDEX idx_teamtalk_users_email ON teamtalk.users(user_email);
CREATE INDEX idx_teamtalk_sessions_user_id ON teamtalk.sessions(user_id);
CREATE INDEX idx_teamtalk_sessions_created_at ON teamtalk.sessions(created_at);
CREATE INDEX idx_teamtalk_conversations_session_id ON teamtalk.conversations(session_id);
CREATE INDEX idx_teamtalk_conversations_created_at ON teamtalk.conversations(created_at);